{
	"id": "bb2df2b4a0803e69331261ab9c74e3a4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FundMe.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.6.6 <0.9.0;\r\n\r\nimport \"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\";\r\nimport \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\";\r\n\r\ncontract FundMe {\r\n    //Kako finansirati smart contrac\r\n    mapping(address => uint256) public addressToAmountFunded;\r\n    \r\n    function fund() public payable {\r\n        addressToAmountFunded[msg.sender] += msg.value;\r\n    }\r\n\r\n    function getVersion() public view returns(uint256) {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n        return priceFeed.version();\r\n    }\r\n\r\n    function getPrice() public view returns(uint256) {\r\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e);\r\n        (\r\n            uint80 roundId,\r\n            int256 answer,\r\n            uint256 startedAt,\r\n            uint256 updatedAt,\r\n            uint80 answeredInRound\r\n        ) = priceFeed.latestRoundData();\r\n        return uint256(answer);\r\n    }\r\n\r\n    function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r\n        uint256 ethPrice = getPrice();\r\n        uint256 ethAmountInUsd = (ethPrice * ethAmount);\r\n        \r\n        return ethAmountInUsd;\r\n    }\r\n}\r\n"
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMathChainlink {\n  /**\n    * @dev Returns the addition of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `+` operator.\n    *\n    * Requirements:\n    * - Addition cannot overflow.\n    */\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\n    uint256 c = a + b;\n    require(c >= a, \"SafeMath: addition overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the subtraction of two unsigned integers, reverting on\n    * overflow (when the result is negative).\n    *\n    * Counterpart to Solidity's `-` operator.\n    *\n    * Requirements:\n    * - Subtraction cannot overflow.\n    */\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b <= a, \"SafeMath: subtraction overflow\");\n    uint256 c = a - b;\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the multiplication of two unsigned integers, reverting on\n    * overflow.\n    *\n    * Counterpart to Solidity's `*` operator.\n    *\n    * Requirements:\n    * - Multiplication cannot overflow.\n    */\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n    // benefit is lost if 'b' is also tested.\n    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522\n    if (a == 0) {\n      return 0;\n    }\n\n    uint256 c = a * b;\n    require(c / a == b, \"SafeMath: multiplication overflow\");\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the integer division of two unsigned integers. Reverts on\n    * division by zero. The result is rounded towards zero.\n    *\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n    * `revert` opcode (which leaves remaining gas untouched) while Solidity\n    * uses an invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\n    // Solidity only automatically asserts when dividing by 0\n    require(b > 0, \"SafeMath: division by zero\");\n    uint256 c = a / b;\n    // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n    return c;\n  }\n\n  /**\n    * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n    * Reverts when dividing by zero.\n    *\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\n    * opcode (which leaves remaining gas untouched) while Solidity uses an\n    * invalid opcode to revert (consuming all remaining gas).\n    *\n    * Requirements:\n    * - The divisor cannot be zero.\n    */\n  function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n    require(b != 0, \"SafeMath: modulo by zero\");\n    return a % b;\n  }\n}\n"
			},
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\ninterface AggregatorV3Interface {\n\n  function decimals()\n    external\n    view\n    returns (\n      uint8\n    );\n\n  function description()\n    external\n    view\n    returns (\n      string memory\n    );\n\n  function version()\n    external\n    view\n    returns (\n      uint256\n    );\n\n  // getRoundData and latestRoundData should both raise \"No data present\"\n  // if they do not have data to report, instead of returning unset values\n  // which could be misinterpreted as actual reported values.\n  function getRoundData(\n    uint80 _roundId\n  )\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n  function latestRoundData()\n    external\n    view\n    returns (\n      uint80 roundId,\n      int256 answer,\n      uint256 startedAt,\n      uint256 updatedAt,\n      uint80 answeredInRound\n    );\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"SafeMathChainlink": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":621:3404  library SafeMathChainlink {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n\n    auxdata: 0xa2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSIZE 0x2A 0x48 PUSH17 0xABDA3A80ACD1314C3B0154594DC009F651 0x49 0xC2 SWAP13 0xCD MULMOD 0xC4 BLOCKHASH 0xB5 0xEE 0x4A 0xB8 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "621:2783:1:-:0;;;;;;12:1:-1;9;2:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 621,
									"end": 3404,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"source": -1,
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE",
									"source": -1
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID",
									"source": -1
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS",
									"source": -1
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"source": -1,
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8",
									"source": -1
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3",
									"source": -1
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN",
									"source": -1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220592a4870abda3a80acd1314c3b0154594dc009f65149c29ccd09c440b5ee4ab864736f6c63430006060033",
									".code": [
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 621,
											"end": 3404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. * Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. * Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":\"SafeMathChainlink\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/FundMe.sol": {
				"FundMe": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "addressToAmountFunded",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fund",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "getConversionRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPrice",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getVersion",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/FundMe.sol\":220:1312  contract FundMe {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"contracts/FundMe.sol\":220:1312  contract FundMe {\r... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundMe.sol\":220:1312  contract FundMe {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0d8e6e2c\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x3e47d6f3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x6e5b6b28\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x98d5fdca\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb60d4288\n      eq\n      tag_6\n      jumpi\n    tag_1:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"contracts/FundMe.sol\":454:660  function getVersion() public view returns(uint256) {\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_7:\n        /* \"contracts/FundMe.sol\":454:660  function getVersion() public view returns(uint256) {\r... */\n      pop\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":281:337  mapping(address => uint256) public addressToAmountFunded */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_10:\n        /* \"contracts/FundMe.sol\":281:337  mapping(address => uint256) public addressToAmountFunded */\n      pop\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_12\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_12:\n        /* \"contracts/FundMe.sol\":281:337  mapping(address => uint256) public addressToAmountFunded */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_13\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":1086:1309  function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_14\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_14:\n        /* \"contracts/FundMe.sol\":1086:1309  function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r... */\n      pop\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_16\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_16:\n        /* \"contracts/FundMe.sol\":1086:1309  function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_17\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":668:1078  function getPrice() public view returns(uint256) {\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_18:\n        /* \"contracts/FundMe.sol\":668:1078  function getPrice() public view returns(uint256) {\r... */\n      pop\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundMe.sol\":350:446  function fund() public payable {\r... */\n    tag_6:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/FundMe.sol\":454:660  function getVersion() public view returns(uint256) {\r... */\n    tag_9:\n        /* \"contracts/FundMe.sol\":496:503  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":516:547  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":572:614  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/FundMe.sol\":516:615  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":633:642  priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":633:650  priceFeed.version */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x54fd4d50\n        /* \"contracts/FundMe.sol\":633:652  priceFeed.version() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_24\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_24:\n        /* \"contracts/FundMe.sol\":633:652  priceFeed.version() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/FundMe.sol\":633:652  priceFeed.version() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_27\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_27:\n        /* \"contracts/FundMe.sol\":633:652  priceFeed.version() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":626:652  return priceFeed.version() */\n      swap2\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":454:660  function getVersion() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":281:337  mapping(address => uint256) public addressToAmountFunded */\n    tag_13:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/FundMe.sol\":1086:1309  function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r... */\n    tag_17:\n        /* \"contracts/FundMe.sol\":1152:1159  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":1172:1188  uint256 ethPrice */\n      dup1\n        /* \"contracts/FundMe.sol\":1191:1201  getPrice() */\n      tag_29\n        /* \"contracts/FundMe.sol\":1191:1199  getPrice */\n      tag_20\n        /* \"contracts/FundMe.sol\":1191:1201  getPrice() */\n      jump\t// in\n    tag_29:\n        /* \"contracts/FundMe.sol\":1172:1201  uint256 ethPrice = getPrice() */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1212:1234  uint256 ethAmountInUsd */\n      0x00\n        /* \"contracts/FundMe.sol\":1249:1258  ethAmount */\n      dup4\n        /* \"contracts/FundMe.sol\":1238:1246  ethPrice */\n      dup3\n        /* \"contracts/FundMe.sol\":1238:1258  ethPrice * ethAmount */\n      mul\n        /* \"contracts/FundMe.sol\":1212:1259  uint256 ethAmountInUsd = (ethPrice * ethAmount) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":1287:1301  ethAmountInUsd */\n      dup1\n        /* \"contracts/FundMe.sol\":1280:1301  return ethAmountInUsd */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":1086:1309  function getConversionRate(uint256 ethAmount) public view returns(uint256) {\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FundMe.sol\":668:1078  function getPrice() public view returns(uint256) {\r... */\n    tag_20:\n        /* \"contracts/FundMe.sol\":708:715  uint256 */\n      0x00\n        /* \"contracts/FundMe.sol\":728:759  AggregatorV3Interface priceFeed */\n      dup1\n        /* \"contracts/FundMe.sol\":784:826  0x8A753747A1Fa494EC906cE90E9f37563A8AF630e */\n      0x8a753747a1fa494ec906ce90e9f37563a8af630e\n        /* \"contracts/FundMe.sol\":728:827  AggregatorV3Interface priceFeed = AggregatorV3Interface(0x8A753747A1Fa494EC906cE90E9f37563A8AF630e) */\n      swap1\n      pop\n        /* \"contracts/FundMe.sol\":853:867  uint80 roundId */\n      0x00\n        /* \"contracts/FundMe.sol\":882:895  int256 answer */\n      dup1\n        /* \"contracts/FundMe.sol\":910:927  uint256 startedAt */\n      0x00\n        /* \"contracts/FundMe.sol\":942:959  uint256 updatedAt */\n      dup1\n        /* \"contracts/FundMe.sol\":974:996  uint80 answeredInRound */\n      0x00\n        /* \"contracts/FundMe.sol\":1010:1019  priceFeed */\n      dup6\n        /* \"contracts/FundMe.sol\":1010:1035  priceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/FundMe.sol\":1010:1037  priceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_31\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_31:\n        /* \"contracts/FundMe.sol\":1010:1037  priceFeed.latestRoundData() */\n      pop\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_33\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_33:\n        /* \"contracts/FundMe.sol\":1010:1037  priceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n        /* \"--CODEGEN--\":15:18   */\n      0xa0\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:19   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":32:33   */\n      0x00\n        /* \"--CODEGEN--\":29:30   */\n      dup1\n        /* \"--CODEGEN--\":22:34   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_34:\n        /* \"contracts/FundMe.sol\":1010:1037  priceFeed.latestRoundData() */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":838:1037  (\r... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n        /* \"contracts/FundMe.sol\":1063:1069  answer */\n      dup4\n        /* \"contracts/FundMe.sol\":1048:1070  return uint256(answer) */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FundMe.sol\":668:1078  function getPrice() public view returns(uint256) {\r... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundMe.sol\":350:446  function fund() public payable {\r... */\n    tag_22:\n        /* \"contracts/FundMe.sol\":429:438  msg.value */\n      callvalue\n        /* \"contracts/FundMe.sol\":392:413  addressToAmountFunded */\n      0x00\n        /* \"contracts/FundMe.sol\":392:425  addressToAmountFunded[msg.sender] */\n      dup1\n        /* \"contracts/FundMe.sol\":414:424  msg.sender */\n      caller\n        /* \"contracts/FundMe.sol\":392:425  addressToAmountFunded[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FundMe.sol\":392:438  addressToAmountFunded[msg.sender] += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundMe.sol\":350:446  function fund() public payable {\r... */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203e3ac60ad78dc22ba2ef0c0c61e8966dfe9270981cbead91359655dacd195ddb64736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061039f806100206000396000f3fe60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780633e47d6f31461007a5780636e5b6b28146100df57806398d5fdca1461012e578063b60d428814610159575b600080fd5b34801561005b57600080fd5b50610064610163565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b506100c96004803603602081101561009d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610204565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506101186004803603602081101561010257600080fd5b810190808035906020019092919050505061021c565b6040518082815260200191505060405180910390f35b34801561013a57600080fd5b5061014361023a565b6040518082815260200191505060405180910390f35b61016161031b565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d60208110156101ed57600080fd5b810190808051906020019092919050505091505090565b60006020528060005260406000206000915090505481565b60008061022761023a565b9050600083820290508092505050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d60a08110156102cc57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945083965050505050505090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea26469706673582212203e3ac60ad78dc22ba2ef0c0c61e8966dfe9270981cbead91359655dacd195ddb64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39F DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x227 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 MUL SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY GASPRICE 0xC6 EXP 0xD7 DUP14 0xC2 0x2B LOG2 0xEF 0xC 0xC PUSH2 0xE896 PUSH14 0xFE9270981CBEAD91359655DACD19 0x5D 0xDB PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "220:1092:2:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;220:1092:2;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061004a5760003560e01c80630d8e6e2c1461004f5780633e47d6f31461007a5780636e5b6b28146100df57806398d5fdca1461012e578063b60d428814610159575b600080fd5b34801561005b57600080fd5b50610064610163565b6040518082815260200191505060405180910390f35b34801561008657600080fd5b506100c96004803603602081101561009d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610204565b6040518082815260200191505060405180910390f35b3480156100eb57600080fd5b506101186004803603602081101561010257600080fd5b810190808035906020019092919050505061021c565b6040518082815260200191505060405180910390f35b34801561013a57600080fd5b5061014361023a565b6040518082815260200191505060405180910390f35b61016161031b565b005b600080738a753747a1fa494ec906ce90e9f37563a8af630e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156101c357600080fd5b505afa1580156101d7573d6000803e3d6000fd5b505050506040513d60208110156101ed57600080fd5b810190808051906020019092919050505091505090565b60006020528060005260406000206000915090505481565b60008061022761023a565b9050600083820290508092505050919050565b600080738a753747a1fa494ec906ce90e9f37563a8af630e905060008060008060008573ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156102a257600080fd5b505afa1580156102b6573d6000803e3d6000fd5b505050506040513d60a08110156102cc57600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190805190602001909291905050509450945094509450945083965050505050505090565b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254019250508190555056fea26469706673582212203e3ac60ad78dc22ba2ef0c0c61e8966dfe9270981cbead91359655dacd195ddb64736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD8E6E2C EQ PUSH2 0x4F JUMPI DUP1 PUSH4 0x3E47D6F3 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x6E5B6B28 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0x98D5FDCA EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0xB60D4288 EQ PUSH2 0x159 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x64 PUSH2 0x163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xC9 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x118 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x102 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x21C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x143 PUSH2 0x23A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x31B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x54FD4D50 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x227 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 DUP3 MUL SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0x8A753747A1FA494EC906CE90E9F37563A8AF630E SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xA0 DUP2 LT ISZERO PUSH2 0x2CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP DUP4 SWAP7 POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST CALLVALUE PUSH1 0x0 DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATACOPY GASPRICE 0xC6 EXP 0xD7 DUP14 0xC2 0x2B LOG2 0xEF 0xC 0xC PUSH2 0xE896 PUSH14 0xFE9270981CBEAD91359655DACD19 0x5D 0xDB PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "220:1092:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;454:206:2;;5:9:-1;2:2;;;27:1;24;17:12;2:2;454:206:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;281:56;;5:9:-1;2:2;;;27:1;24;17:12;2:2;281:56:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;281:56:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1086:223;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1086:223:2;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;1086:223:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;668:410;;5:9:-1;2:2;;;27:1;24;17:12;2:2;668:410:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;350:96;;;:::i;:::-;;454:206;496:7;516:31;572:42;516:99;;633:9;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;633:19:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;633:19:2;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;633:19:2;;;;;;;;;;;;;;;;626:26;;;454:206;:::o;281:56::-;;;;;;;;;;;;;;;;;:::o;1086:223::-;1152:7;1172:16;1191:10;:8;:10::i;:::-;1172:29;;1212:22;1249:9;1238:8;:20;1212:47;;1287:14;1280:21;;;;1086:223;;;:::o;668:410::-;708:7;728:31;784:42;728:99;;853:14;882:13;910:17;942;974:22;1010:9;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;1010:27:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1010:27:2;;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;1010:27:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:199;;;;;;;;;;1063:6;1048:22;;;;;;;;668:410;:::o;350:96::-;429:9;392:21;:33;414:10;392:33;;;;;;;;;;;;;;;;:46;;;;;;;;;;;350:96::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "185400",
								"executionCost": "226",
								"totalCost": "185626"
							},
							"external": {
								"addressToAmountFunded(address)": "1169",
								"fund()": "21107",
								"getConversionRate(uint256)": "infinite",
								"getPrice()": "infinite",
								"getVersion()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 1312,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203e3ac60ad78dc22ba2ef0c0c61e8966dfe9270981cbead91359655dacd195ddb64736f6c63430006060033",
									".code": [
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "D8E6E2C"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "3E47D6F3"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "6E5B6B28"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "98D5FDCA"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH",
											"source": 2,
											"value": "B60D4288"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 454,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "7"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 454,
											"end": 660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "10"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "12"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "14"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "16"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "18"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 350,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 350,
											"end": 446,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 454,
											"end": 660,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 496,
											"end": 503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 572,
											"end": 614,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 516,
											"end": 615,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 516,
											"end": 615,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 642,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 633,
											"end": 650,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 633,
											"end": 650,
											"name": "PUSH",
											"source": 2,
											"value": "54FD4D50"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "24"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "27"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 633,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 633,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 660,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 281,
											"end": 337,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1152,
											"end": 1159,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1172,
											"end": 1188,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1191,
											"end": 1199,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 1191,
											"end": 1201,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1172,
											"end": 1201,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1234,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1249,
											"end": 1258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1238,
											"end": 1258,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1212,
											"end": 1259,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1301,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1301,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1280,
											"end": 1301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1086,
											"end": 1309,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 728,
											"end": 759,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 784,
											"end": 826,
											"name": "PUSH",
											"source": 2,
											"value": "8A753747A1FA494EC906CE90E9F37563A8AF630E"
										},
										{
											"begin": 728,
											"end": 827,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 728,
											"end": 827,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 853,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 895,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 910,
											"end": 927,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 942,
											"end": 959,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 974,
											"end": 996,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1010,
											"end": 1019,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1035,
											"name": "PUSH",
											"source": 2,
											"value": "FEAF968C"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "31"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY",
											"source": -1
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE",
											"source": -1
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"source": -1,
											"value": "33"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 15,
											"end": 18,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 19,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 32,
											"end": 33,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 22,
											"end": 34,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "34"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1010,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 838,
											"end": 1037,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1048,
											"end": 1070,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 668,
											"end": 1078,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 429,
											"end": 438,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 413,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 414,
											"end": 424,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 425,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 392,
											"end": 425,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 392,
											"end": 438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 392,
											"end": 438,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 350,
											"end": 446,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addressToAmountFunded(address)": "3e47d6f3",
							"fund()": "b60d4288",
							"getConversionRate(uint256)": "6e5b6b28",
							"getPrice()": "98d5fdca",
							"getVersion()": "0d8e6e2c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"getConversionRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x8895ce4f46aba18ee3cdb7b1d180f79edb868225781f60993c7b2181e2ee2583\",\"urls\":[\"bzz-raw://4472c14df5f311d7a2eff1dfa55d9b4d39a21b0a0ff905fcbbf6913551086a4c\",\"dweb:/ipfs/QmQvwFk1SBaLMm4pmZCz7UEhfaXM8kUWu5VG71VFFuMxjF\"]},\"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol\":{\"keccak256\":\"0x105f5e9491f3d0bbdd4f1c7627eb839d69b944bfd803028a01cc083597692c1f\",\"urls\":[\"bzz-raw://ec45a2748a024a947a921183d4102d5e206808588501d85ddc4f5668a009bc73\",\"dweb:/ipfs/QmRNAMpq7LdWFnJ7wWKGbUuAcURaGSS42PMxtQ4vjrHmp9\"]},\"contracts/FundMe.sol\":{\"keccak256\":\"0xf114cba7fc1f01ede776021e341ca3e76e233abe993917b1628f9510e15599d5\",\"urls\":[\"bzz-raw://a4d7dbf4349720b2cb45353d291f92b4375118afe91f2f8dc2a1d853eadd7e1f\",\"dweb:/ipfs/QmciV1CwLrPDSWkpQB8EZddBQmnGCtj9skN7cnZwKWqYoi\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/FundMe.sol:24:13: Warning: Unused local variable.\n            uint80 roundId,\n            ^------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 867,
					"file": "contracts/FundMe.sol",
					"start": 853
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/FundMe.sol:26:13: Warning: Unused local variable.\n            uint256 startedAt,\n            ^---------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 927,
					"file": "contracts/FundMe.sol",
					"start": 910
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/FundMe.sol:27:13: Warning: Unused local variable.\n            uint256 updatedAt,\n            ^---------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 959,
					"file": "contracts/FundMe.sol",
					"start": 942
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/FundMe.sol:28:13: Warning: Unused local variable.\n            uint80 answeredInRound\n            ^--------------------^\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 996,
					"file": "contracts/FundMe.sol",
					"start": 974
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "111:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 6,
												"src": "156:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "156:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "148:19:0"
									},
									"scope": 45,
									"src": "94:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "192:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 11,
												"src": "237:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "229:27:0"
									},
									"scope": 45,
									"src": "172:85:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 16,
												"src": "322:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "322:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "314:21:0"
									},
									"scope": 45,
									"src": "261:75:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "578:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "578:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "572:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "640:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "640:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "662:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "662:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "683:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "708:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 31,
												"src": "733:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "733:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "632:129:0"
									},
									"scope": 45,
									"src": "551:211:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "790:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "835:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "835:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "857:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "857:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "878:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "903:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 44,
												"src": "928:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:129:0"
									},
									"scope": 45,
									"src": "766:191:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:903:0"
						}
					],
					"src": "32:929:0"
				},
				"id": 0
			},
			"@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
					"exportedSymbols": {
						"SafeMathChainlink": [
							184
						]
					},
					"id": 185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 48,
								"nodeType": "StructuredDocumentation",
								"src": "57:563:1",
								"text": "@dev Wrappers over Solidity's arithmetic operations with added overflow\nchecks.\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\nin bugs, because programmers usually assume that an overflow raises an\nerror, which is the standard behavior in high level programming languages.\n`SafeMath` restores this intuition by reverting the transaction when an\noperation overflows.\n * Using this library instead of the unchecked operations eliminates an entire\nclass of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 184,
							"linearizedBaseContracts": [
								184
							],
							"name": "SafeMathChainlink",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "930:95:1",
										"statements": [
											{
												"assignments": [
													59
												],
												"declarations": [
													{
														"constant": false,
														"id": 59,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 73,
														"src": "936:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 58,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "936:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 63,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 60,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "948:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 61,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "936:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 67,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 65,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 59,
																"src": "967:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 66,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 51,
																"src": "972:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "967:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 68,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "975:29:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "959:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "959:46:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "959:46:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 59,
													"src": "1019:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 57,
												"id": 72,
												"nodeType": "Return",
												"src": "1012:8:1"
											}
										]
									},
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "651:209:1",
										"text": "@dev Returns the addition of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `+` operator.\n    * Requirements:\n- Addition cannot overflow."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "876:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "887:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 52,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "875:22:1"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 74,
												"src": "921:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "920:9:1"
									},
									"scope": 184,
									"src": "863:162:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1344:98:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 85,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 79,
																"src": "1358:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 86,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "1363:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1358:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1366:32:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 84,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1350:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1350:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "1350:49:1"
											},
											{
												"assignments": [
													92
												],
												"declarations": [
													{
														"constant": false,
														"id": 92,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 99,
														"src": "1405:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 91,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1405:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 96,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 93,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 77,
														"src": "1417:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "1421:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1417:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1405:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 97,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 92,
													"src": "1436:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 83,
												"id": 98,
												"nodeType": "Return",
												"src": "1429:8:1"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "1029:245:1",
										"text": "@dev Returns the subtraction of two unsigned integers, reverting on\noverflow (when the result is negative).\n    * Counterpart to Solidity's `-` operator.\n    * Requirements:\n- Subtraction cannot overflow."
									},
									"id": 100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1290:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 76,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1290:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1301:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1289:22:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 100,
												"src": "1335:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1335:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1334:9:1"
									},
									"scope": 184,
									"src": "1277:165:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 134,
										"nodeType": "Block",
										"src": "1737:351:1",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 110,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 111,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1957:1:1",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1952:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 116,
												"nodeType": "IfStatement",
												"src": "1948:35:1",
												"trueBody": {
													"id": 115,
													"nodeType": "Block",
													"src": "1960:23:1",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1975:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 109,
															"id": 114,
															"nodeType": "Return",
															"src": "1968:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 134,
														"src": "1989:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 117,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1989:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 122,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "2001:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 120,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 105,
														"src": "2005:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2001:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1989:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 124,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 118,
																	"src": "2020:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 125,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "2024:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2020:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 127,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "2029:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2020:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2032:35:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 123,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2012:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2012:56:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 131,
												"nodeType": "ExpressionStatement",
												"src": "2012:56:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 118,
													"src": "2082:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 133,
												"nodeType": "Return",
												"src": "2075:8:1"
											}
										]
									},
									"documentation": {
										"id": 101,
										"nodeType": "StructuredDocumentation",
										"src": "1446:221:1",
										"text": "@dev Returns the multiplication of two unsigned integers, reverting on\noverflow.\n    * Counterpart to Solidity's `*` operator.\n    * Requirements:\n- Multiplication cannot overflow."
									},
									"id": 135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1683:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1694:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1682:22:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 135,
												"src": "1728:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1728:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1727:9:1"
									},
									"scope": 184,
									"src": "1670:418:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "2596:237:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 140,
																"src": "2672:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2676:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2672:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2679:28:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2664:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2664:44:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 151,
												"nodeType": "ExpressionStatement",
												"src": "2664:44:1"
											},
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 160,
														"src": "2714:9:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 152,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2714:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 157,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 154,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 138,
														"src": "2726:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 155,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 140,
														"src": "2730:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2726:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2714:17:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 158,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 153,
													"src": "2827:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 144,
												"id": 159,
												"nodeType": "Return",
												"src": "2820:8:1"
											}
										]
									},
									"documentation": {
										"id": 136,
										"nodeType": "StructuredDocumentation",
										"src": "2092:434:1",
										"text": "@dev Returns the integer division of two unsigned integers. Reverts on\ndivision by zero. The result is rounded towards zero.\n    * Counterpart to Solidity's `/` operator. Note: this function uses a\n`revert` opcode (which leaves remaining gas untouched) while Solidity\nuses an invalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2542:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2542:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2553:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2553:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2541:22:1"
									},
									"returnParameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 161,
												"src": "2587:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2587:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2586:9:1"
									},
									"scope": 184,
									"src": "2529:304:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 182,
										"nodeType": "Block",
										"src": "3330:72:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3344:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 173,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3349:1:1",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3344:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3352:26:1",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3336:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "3336:43:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 178,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "3392:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 179,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 166,
														"src": "3396:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3392:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 170,
												"id": 181,
												"nodeType": "Return",
												"src": "3385:12:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "2837:423:1",
										"text": "@dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\nReverts when dividing by zero.\n    * Counterpart to Solidity's `%` operator. This function uses a `revert`\nopcode (which leaves remaining gas untouched) while Solidity uses an\ninvalid opcode to revert (consuming all remaining gas).\n    * Requirements:\n- The divisor cannot be zero."
									},
									"id": 183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3276:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3287:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3287:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3275:22:1"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 183,
												"src": "3321:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3321:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3320:9:1"
									},
									"scope": 184,
									"src": "3263:139:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 185,
							"src": "621:2783:1"
						}
					],
					"src": "32:3373:1"
				},
				"id": 1
			},
			"contracts/FundMe.sol": {
				"ast": {
					"absolutePath": "contracts/FundMe.sol",
					"exportedSymbols": {
						"FundMe": [
							274
						]
					},
					"id": 275,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 186,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".6",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:31:2"
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.6/interfaces/AggregatorV3Interface.sol",
							"id": 187,
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 46,
							"src": "70:76:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"file": "@chainlink/contracts/src/v0.6/vendor/SafeMathChainlink.sol",
							"id": 188,
							"nodeType": "ImportDirective",
							"scope": 275,
							"sourceUnit": 185,
							"src": "148:68:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 274,
							"linearizedBaseContracts": [
								274
							],
							"name": "FundMe",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3e47d6f3",
									"id": 192,
									"mutability": "mutable",
									"name": "addressToAmountFunded",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 274,
									"src": "281:56:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 191,
										"keyType": {
											"id": 189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "289:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "281:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 190,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "300:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "381:65:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 195,
															"name": "addressToAmountFunded",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "392:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 198,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 196,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": -15,
																"src": "414:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "414:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "392:33:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 199,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -15,
															"src": "429:3:2",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "429:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "392:46:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "392:46:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "b60d4288",
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fund",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "363:2:2"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "381:0:2"
									},
									"scope": 274,
									"src": "350:96:2",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "505:155:2",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 219,
														"src": "516:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 209,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "516:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 214,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "572:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 211,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "550:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "550:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "516:99:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 215,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "633:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "version",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "633:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
															"typeString": "function () view external returns (uint256)"
														}
													},
													"id": 217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 208,
												"id": 218,
												"nodeType": "Return",
												"src": "626:26:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "0d8e6e2c",
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVersion",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "473:2:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 220,
												"src": "496:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "496:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "495:9:2"
									},
									"scope": 274,
									"src": "454:206:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "717:361:2",
										"statements": [
											{
												"assignments": [
													226
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "priceFeed",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "728:31:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														},
														"typeName": {
															"contractScope": null,
															"id": 225,
															"name": "AggregatorV3Interface",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 45,
															"src": "728:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 230,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "307838413735333734374131466134393445433930366345393045396633373536334138414636333065",
															"id": 228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "784:42:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"value": "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 227,
														"name": "AggregatorV3Interface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "762:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
															"typeString": "type(contract AggregatorV3Interface)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "762:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "728:99:2"
											},
											{
												"assignments": [
													232,
													234,
													236,
													238,
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "roundId",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "853:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 231,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "853:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "answer",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "882:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 233,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "882:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "startedAt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "910:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "910:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 238,
														"mutability": "mutable",
														"name": "updatedAt",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "942:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 237,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "942:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "answeredInRound",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 250,
														"src": "974:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														},
														"typeName": {
															"id": 239,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "974:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint80",
																"typeString": "uint80"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"id": 241,
															"name": "priceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "1010:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "1010:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1010:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "838:199:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 247,
															"name": "answer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "1063:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1055:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 245,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1055:7:2",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1055:15:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 224,
												"id": 249,
												"nodeType": "Return",
												"src": "1048:22:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "98d5fdca",
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPrice",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "685:2:2"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 251,
												"src": "708:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "707:9:2"
									},
									"scope": 274,
									"src": "668:410:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 272,
										"nodeType": "Block",
										"src": "1161:148:2",
										"statements": [
											{
												"assignments": [
													259
												],
												"declarations": [
													{
														"constant": false,
														"id": 259,
														"mutability": "mutable",
														"name": "ethPrice",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 272,
														"src": "1172:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1172:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 260,
														"name": "getPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "1191:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1191:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1172:29:2"
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"mutability": "mutable",
														"name": "ethAmountInUsd",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 272,
														"src": "1212:22:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1212:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"argumentTypes": null,
													"components": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 265,
																"name": "ethPrice",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 259,
																"src": "1238:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"argumentTypes": null,
																"id": 266,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 253,
																"src": "1249:9:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1238:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 268,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1237:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1212:47:2"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 270,
													"name": "ethAmountInUsd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 264,
													"src": "1287:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 257,
												"id": 271,
												"nodeType": "Return",
												"src": "1280:21:2"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6e5b6b28",
									"id": 273,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getConversionRate",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "ethAmount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1113:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1112:19:2"
									},
									"returnParameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 273,
												"src": "1152:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1152:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1151:9:2"
									},
									"scope": 274,
									"src": "1086:223:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 275,
							"src": "220:1092:2"
						}
					],
					"src": "35:1279:2"
				},
				"id": 2
			}
		}
	}
}